
--------------------------------------------------------------------------

#include <dlfcn.h>

void *dlopen(const char *filename, int flag);

以指定模式打开指定的动态连接库文件，并返回一个句柄给调用进程，
dlopen打开模式如下：
　　RTLD_LAZY 暂缓决定，等有需要时再解出符号 
　　RTLD_NOW 立即决定，返回前解除所有未决定的符号。
	RTLD_GLOBAL:它的含义是使得库中的解析的定义变量在随后的其它的链接库中变得可以使用。

char *dlerror(void);
返回出现的错误，

void *dlsym(void *handle, const char *symbol);
通过句柄和连接符名称获取函数名或者变量名，
函数定义：
void*dlsym(void*handle,constchar*symbol)
函数描述：
dlsym(dynamic library symbol)
根据 动态链接库 操作句柄(handle)与符号(symbol)，返回符号对应的地址。使用这个函数不但可以获取函数地址，也可以获取变量地址。
handle：由dlopen打开动态链接库后返回的指针；
symbol：要求获取的函数或全局变量的名称。
返回值：
void* 指向函数的地址，供调用使用。

int dlclose(void *handle);
来卸载打开的库。 

--------------------------------------------------------------------------

char *strchr(const char* _Str,char _Val)
char *strchr(char* _Str,char _Ch)
头文件：#include <string.h>
功能：查找字符串_Str中首次出现字符_Val的位置
说明：返回首次出现_Val的位置的指针，返回的地址是被查找字符串指针开始的第一个与Val相同字符的指针，
	  如果Str中不存在Val则返回NULL。
返回值：成功则返回要查找字符第一次出现的位置，失败返回NULL

--------------------------------------------------------------------------

函数原型：char *strrchr(const char *str, char c);
所属库： string.h
函数功能：查找一个字符c在另一个字符串str中末次出现的位置（也就是从str的右侧开始查找字符c首次出现的位置），
并返回这个位置的地址。如果未能找到指定字符，那么函数将返回NULL。使用这个地址返回从最后一个字符c到str末尾的字符串。

--------------------------------------------------------------------------
